.page {
  display: flex;
  flex-direction: column;
  gap: 32px;
  padding: 32px 48px 56px;
  min-height: 100%;
}

.sectionOne {
  width: 100%;
  display: flex;
}

.sectionOneInner {
  width: 100%;
  max-width: 1920px !important;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 32px;
  min-height: 100%;
}

.continueButton {
  width: 100%;
}
.pageHeading {
  width: 100%;
  max-width: 1920px !important;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 16px;
}

.editor {
  display: flex;
  flex-direction: column;
  gap: 32px;
  width: 100%;
  max-width: 1920px !important;
  margin: 0 auto;
  max-height: 800px !important;
}

.editorFullHeight {
  max-height: none !important;
}

.configAccordion {
  border: 1px solid rgba(255, 255, 255, 0.12);
  border-radius: 20px;
  background: rgba(40, 40, 40, 0.7);
  color: #f9fafb;
  overflow: hidden;
  backdrop-filter: blur(12px);
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

.configAccordionOpen {
  border-color: rgba(148, 163, 255, 0.55);
  box-shadow: 0 24px 44px rgba(12, 12, 20, 0.45);
}

.tutorialButton {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  padding: 9px 9px;
  min-width: 150px;
  border-radius: 12px;
  border: 1px solid rgba(128,128,128,.45);
  background: #181818;
  color: #f7f7f9;
  font-size: 15px;
  font-weight: 400;
  letter-spacing: .02em;
  text-decoration: none;
  overflow: hidden;                 /* para recortar el fill */
  transition: border-color .25s ease, transform .25s ease;
  will-change: transform;
  margin-top: -25px;
  margin-bottom: -15px;
}


.tutorialButton::before {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(40, 40, 40, 0.7); /* #282828 al 70% */
  transform: scaleX(0);
  transform-origin: left center;
  transition: transform .32s ease;
  pointer-events: none;
  z-index: 0;
}

/* Eleva el contenido por encima del fill */
.tutorialButton > * {
  position: relative;
  z-index: 1;
}

.tutorialButton:hover::before,
.tutorialButton:focus-visible::before {
  transform: scaleX(1);
}

.tutorialButton:hover { 
  border-color: rgba(200,200,200,.55);
  transform: translateY(-1px);
}

/* Active tap/click */
.tutorialButton:active { transform: translateY(0); }

/* Accesibilidad: focus */
.tutorialButton:focus-visible {
  outline: 2px solid #79c0ff;
  outline-offset: 3px;
}


.tutorialButtonIcon {
  width: 18px;
  height: 18px;
  display: block;
}

.configDropdown {
  position: relative;
  display: inline-flex;
  flex-direction: column;
  gap: 12px;
}

.configTrigger {
  display: inline-flex;
  align-items: center;
  gap: 14px;
  padding: 16px 20px;
  border-radius: 16px;
  background: #282828d0;
  border: 1px solid #5c5c5ca2;
  color: #f6f7fb;
  font-weight: 400;
  font-size: 1rem;
  cursor: pointer;
  transition: border-color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;
}

.configTrigger:hover:not(:disabled) {
  border: 1px solid #34343b;
 
  transform: translateY(-1px);
}

.configTrigger:disabled,
.configTriggerDisabled {
  opacity: 0.45;
  cursor: not-allowed;
  transform: none;
}

.configHeader {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 12px;
  padding: 20px 24px;
  border: none;
  background: #181818;
  border: 1px solid #34343b;
  color: inherit;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
}

.configTrigger:focus-visible {
  outline: 2px solid rgba(255, 255, 255, 0.35);
  outline-offset: 4px;
}

.configTriggerIcon {
  width: 24px;
  height: 24px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.configTriggerLabel {
  white-space: nowrap;
}

.configTriggerArrow img {
  width: 18px;
  height: 18px;
  transition: transform 0.2s ease;
}

.configTriggerArrowOpen {
  transform: rotate(180deg);
}

.configPanel {
  position: absolute;
  top: calc(100% + 12px);
  left: 0;
  min-width: min(420px, calc(100vw - 96px));
  max-width: min(520px, calc(100vw - 96px));
  display: flex;
  flex-direction: column;
  gap: 24px;
  padding: 28px;
  padding-top: calc(28px + env(safe-area-inset-top));
  padding-right: calc(28px + env(safe-area-inset-right));
  padding-bottom: calc(28px + env(safe-area-inset-bottom));
  padding-left: calc(28px + env(safe-area-inset-left));
  border-radius: 24px;
  border: 1px solid rgba(63, 63, 77, 0.6);
  border-top: 1px solid rgba(255, 255, 255, 0.08);
  background: rgba(14, 14, 20, 0.96);
  box-shadow: 0 32px 60px rgba(0, 0, 0, 0.5);
  z-index: 30;
  max-height: 70vh;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  box-sizing: border-box;
}

.configPanelDisabled {
  opacity: 0.6;
  pointer-events: none;
}

@media (max-width: 768px) {
  .configTrigger {
    width: auto;
    min-width: 0;
    padding: 12px 16px;
    justify-content: center;
  }

  .configTriggerLabel,
  .configTriggerArrow {
    display: none;
  }

  .configPanel {
    min-width: auto;
    max-width: min(
      520px,
      calc(100vw - 24px - env(safe-area-inset-left) - env(safe-area-inset-right))
    );
  }
}

.field {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.fieldLabel {
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: rgba(206, 212, 226, 0.85);
  font-weight: 600;
}

.textInput {
  width: 100%;
  padding: 14px 16px;
  border-radius: 12px;
  border: 1px solid rgba(63, 63, 77, 0.7);
  background: rgba(22, 22, 28, 0.9);
  color: #f3f4f6;
  font-size: 1rem;
  font-weight: 500;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}


.textInput::placeholder {
  color: rgba(156, 163, 175, 0.7);
}

.textInput:focus {
  outline: none;
  border-color: rgba(170, 170, 190, 0.9);
  box-shadow: 0 0 0 3px rgba(170, 170, 190, 0.2);
}

.textInputError,
.textInputError:focus {
  border-color: rgba(239, 68, 68, 0.7);
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.25);
}

.fieldError {
  margin: 0;
  color: #fca5a5;
  font-size: 0.85rem;
  font-weight: 500;
}


.canvasHistoryActions {
  position: absolute;
  top: 24px;
  right: 24px;
  display: flex;
  align-items: center;
  gap: 14px;

  z-index: 1200;

}

.topActionButton {
  width: 52px;
  height: 52px;
  border-radius: 16px;
  border: 1px solid rgba(63, 63, 77, 0.65);
  background: rgba(20, 20, 26, 0.92);
  color: #f6f7fb;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: transform 0.18s ease, border-color 0.18s ease, box-shadow 0.18s ease;
}

.topActionButton:disabled {
  opacity: 0.45;
  cursor: not-allowed;
  border-color: rgba(63, 63, 77, 0.4);
  background: rgba(18, 18, 24, 0.6);
}

.topActionButton:not(:disabled):hover {
  transform: translateY(-2px);
  border-color: rgba(170, 170, 190, 0.9);
  box-shadow: 0 18px 36px rgba(0, 0, 0, 0.45);
}

.topActionButton:not(:disabled):active {
  transform: translateY(0);
}

.topActionButton:focus-visible {
  outline: 2px solid rgba(255, 255, 255, 0.35);
  outline-offset: 3px;
}

.deleteActionButton {
  border-color: rgba(239, 68, 68, 0.7);
  color: #fca5a5;
  background: rgba(56, 18, 24, 0.8);
}

.deleteActionButton:not(:disabled):hover {
  border-color: rgba(239, 68, 68, 0.85);
  box-shadow: 0 18px 36px rgba(239, 68, 68, 0.25);
}

.topActionIcon {
  width: 28px;
  height: 28px;
}

.canvasStage {
  position: relative;
  --canvas-floating-right: calc(24px + env(safe-area-inset-right, 0px));
  --canvas-floating-bottom: calc(24px + env(safe-area-inset-bottom, 0px));
  --canvas-floating-gap: 12px;
  --canvas-continue-height: clamp(48px, 6vw, 52px);
  display: flex;
  flex-direction: column;
  background: rgba(12, 12, 18, 0.95);
  border: 1px solid rgba(63, 63, 77, 0.55);
  border-radius: 12px;

  min-height: 320px;
}

.canvasStageEmpty {
  border-color: transparent;
  background: #181818;
  border: 1px solid rgba(63, 63, 77, 0.55);
}

.canvasViewport {
  position: relative;
  flex: 1;
  display: flex;
}

.uploadOverlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}

.uploadControl {
  pointer-events: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}

.uploadButton {
 
  width: min(100%, 220px);
  min-height: 52px;
  height: 52px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 24px;

  /* — Look premium — */
  position: relative;                 /* para el fill */
  overflow: hidden;
  border-radius: 16px;
  border: 1px solid #34343b;
  background: #282828a8;
  color: rgba(235, 236, 245, 0.95);
  font-family: 'Poppins', sans-serif;
  font-size: 15px;
  font-weight: 400;
  letter-spacing: 5%;
  line-height: 1;
  cursor: pointer;
  
  transition: border-color .25s ease, box-shadow .25s ease, color .25s ease;
  text-align: left;
  text-transform: none;
}

/* Capa de “pintado” de izquierda a derecha (#282828 70%) */
.uploadButton::before {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(40,40,40,.7);
  transform: scaleX(0);
  transform-origin: left center;
  transition: transform .32s ease;
  pointer-events: none;
  z-index: 0;
}

/* Asegura que el contenido quede encima del fill */
.uploadButton > * { position: relative; z-index: 1; }

/* Hover/focus: no cambio distribución, solo colores/sombras */
.uploadButton:not(:disabled):hover::before,
.uploadButton:focus-visible::before {
  transform: scaleX(1);
}
.uploadButton:not(:disabled):hover {
 
  border-color: rgba(170, 170, 190, 0.75);
  
}

/* Focus accesible */
.uploadButton:focus-visible {
  outline: 2px solid rgba(121,192,255,.6);
  outline-offset: 3px;
}

/* Disabled */
.uploadButton:disabled {
  opacity: .45;
  cursor: not-allowed;
  box-shadow: none;
}

/* Hijos: mantengo tu distribución */
.uploadButtonIcon {
  order: 2;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 32px;
  font-weight: 400;
  letter-spacing: 5%;
  line-height: 1;
  color: inherit;
  flex-shrink: 0;
}

.uploadButtonText {
  flex: 1;
  display: inline-flex;
  align-items: center;
  font-size: 15px;
  font-weight: 500;
  letter-spacing: 0;
  line-height: 1;
  white-space: nowrap;
}

/* (Opcional) si usás <img>/SVG dentro del icono, fijá tamaño sin afectar layout */
.uploadButtonIcon svg,
.uploadButtonIcon img { width: 20px; height: 20px; display: block; }



.ackLabel {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  min-height: 36px;
  padding: 4px 6px;
  border-radius: 8px;
  background: none;
  border: none;
  box-shadow: none;
  color: rgba(235, 236, 245, 0.78);
  font-size: 13px;
  font-weight: 400;
  letter-spacing: 0;
  line-height: 1.4;
  cursor: pointer;
  text-align: center;
  width: 100%;
  transition: color 0.18s ease, box-shadow 0.18s ease, background-color 0.18s ease;
}

.ackLabel:hover {
  color: rgba(235, 236, 245, 0.88);
}

.ackLabel:focus-within {
  outline: 2px solid rgba(235, 236, 245, 0.45);
  outline-offset: 2px;
}

@supports selector(:has(:focus-visible)) {
  .ackLabel:focus-within {
    outline: none;
  }

  .ackLabel:has(.ackCheckbox:focus-visible) {
    outline: 2px solid rgba(235, 236, 245, 0.5);
    outline-offset: 2px;
  }
}

.ackLabelText {
  flex: 0 1 auto;
  min-width: 0;
  margin: 0;
  color: inherit;
  line-height: 1.4;
  white-space: normal;
  text-align: inherit;
}

.ackLabelTextError {
  color: var(--danger-400, #FF5C5C);
}

.ackCheckbox {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  opacity: 0;
  pointer-events: none;
  -webkit-appearance: none;
  appearance: none;
}

.ackCheckbox:focus-visible {
  outline: none;
}

.ackIndicator {
  --ack-indicator-size: 12px;
  flex: 0 0 auto;
  width: var(--ack-indicator-size);
  height: var(--ack-indicator-size);
  border-radius: 999px;
  border: 1px solid rgba(235, 236, 245, 0.45);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: rgba(235, 236, 245, 0.88);
  position: relative;
  pointer-events: none;
  transition: border-color 0.18s ease, color 0.18s ease;
}

.ackIndicator::after {
  content: "";
  width: calc(var(--ack-indicator-size) - 4px);
  height: calc(var(--ack-indicator-size) - 4px);
  border-radius: 999px;
  background: currentColor;
  opacity: 0;
  transform: scale(0.4);
  transition: opacity 0.18s ease, transform 0.18s ease;
}

.ackCheckbox:checked + .ackIndicator {
  border-color: rgba(235, 236, 245, 0.85);
}

.ackCheckbox:checked + .ackIndicator::after {
  opacity: 1;
  transform: scale(1);
}

.canvasAck {
  position: absolute;
  right: var(--canvas-floating-right);
  bottom: calc(var(--canvas-floating-bottom) + var(--canvas-continue-height) + 6px);
  z-index: 60;
  width: clamp(220px, 26vw, 320px);
  max-width: min(320px, calc(100% - var(--canvas-floating-right)));
}

.ackLabelInvalid {
  color: rgba(252, 165, 165, 0.92);
  background: rgba(64, 18, 24, 0.35);
  box-shadow: 0 0 0 1px rgba(239, 68, 68, 0.45);
}

.ackLabelInvalid .ackIndicator {
  border-color: rgba(239, 68, 68, 0.65);
  color: rgba(239, 68, 68, 0.85);
}

.canvasFeedback {
  position: absolute;
  left: var(--canvas-floating-right);
  right: var(--canvas-floating-right);
  bottom: calc(var(--canvas-floating-bottom) + var(--canvas-continue-height) + 6px);
  z-index: 60;
  display: flex;
  justify-content: flex-start;
  padding-right: calc(clamp(220px, 26vw, 320px) + var(--canvas-floating-gap));
}

.canvasContinue {
  position: absolute;
  right: var(--canvas-floating-right);
  bottom: var(--canvas-floating-bottom);
  z-index: 60;
  max-width: min(320px, calc(100% - var(--canvas-floating-right)));
}

.errorMessage {
  margin: 0;
  padding: 12px 18px;
  border-radius: 14px;
  border: 1px solid rgba(239, 68, 68, 0.45);
  background: rgba(64, 18, 26, 0.82);
  color: #fca5a5;
  font-size: 0.9rem;
  max-width: 520px;
}

.continueButton {
  width: clamp(220px, 26vw, 320px);
  min-height: var(--canvas-continue-height, 48px);
  height: var(--canvas-continue-height, 48px);
  border-radius: 11px;
  border: 1px solid #34343b;
  background: #282828a8;
  color: inherit;
  font-size: 1rem;
  font-weight: 600;
  letter-spacing: 0;
  padding: 0 24px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  cursor: pointer;
  transition: background-color 0.18s ease, border-color 0.18s ease,
    box-shadow 0.18s ease;
}

.continueButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  box-shadow: none;
}

.continueButton:not(:disabled):hover {
  background: rgba(117, 117, 117, 0.644);
  border-color: rgba(128, 128, 128, 0.32);
}

.continueButton:focus-visible {
  outline: 2px solid rgba(255, 255, 255, 0.575);
  outline-offset: 3px;
}
@media (prefers-reduced-motion: reduce) {
  .tutorialButton,
  .tutorialButton::before {
    transition: none;
  }
}
@media (max-width: 960px) {
  .page {
    padding: 28px 28px 48px;
  }

  .pageHeading,
  .editor {
    max-width: 100%;
  }

  .canvasStage {
    padding: 28px;
    height: auto;
    min-height: 520px;
  }
}

@media (max-width: 640px) {
  .page {
    padding: 22px 18px 40px;
  }

  .editor {
    gap: 24px;
  }

  .configDropdown {
    width: 100%;
  }

  .configPanel {
    position: static;
    top: auto;
    left: auto;
    width: 100%;
    min-width: 0;
    max-width: none;
  }

  .canvasStage {
    padding: 22px;
    border-radius: 24px;
    height: auto;
    min-height: 460px;
  }

  .canvasHistoryActions {
    top: 16px;
    right: 16px;
    gap: 10px;
  }

  .uploadControl {
    width: min(360px, 100%);
    padding: 20px 24px;
  }
}
